package ripico.database;

import ripico.api.dal.WettenAdapter;
import ripico.api.domain.Wette;
import ripico.database.connection.DefaultConnectionPool;

import java.sql.*;

public class DatabaseWettenAdapterImpl implements WettenAdapter {

    private final DefaultConnectionPool connectionPool;

    public DatabaseWettenAdapterImpl() throws SQLException {
        connectionPool = DefaultConnectionPool.create();
    }

    @Override
    public Wette createWette(Wette wette) {

        Connection connection;
        try {
            connection = connectionPool.getConnection();
        } catch (SQLException e) {
            return null;
        }
        try (PreparedStatement preparedStatement = createPreparedStatement(connection, wette)) {
            int ergebnis = preparedStatement.executeUpdate();
            if (ergebnis == 0) {
                return null;
            }
            ResultSet tableKeys = preparedStatement.getGeneratedKeys();
            tableKeys.next();
            int autoGeneratedID = tableKeys.getInt(1);
            wette.setWettenId(autoGeneratedID);
            return wette;
        } catch (SQLException e) {
            return null;
        }
    }

    private PreparedStatement createPreparedStatement(Connection connection, Wette wette) throws SQLException {
        String sqlStatement = "INSERT INTO ripico.wette(spiel_id, wettschein_id, gesetzte_wette) values (?,?,?)";
        PreparedStatement preparedStatement = connection.prepareStatement(sqlStatement, Statement.RETURN_GENERATED_KEYS);
        preparedStatement.setInt(1, wette.getSpiel().getSpielId());
        preparedStatement.setInt(2, wette.getWettscheinId());
        preparedStatement.setString(3, wette.getGesetzteWette().toString());
        return preparedStatement;
    }
}
